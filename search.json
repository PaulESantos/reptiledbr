[{"path":"https://paulesantos.github.io/reptiledbr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 reptiledbr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"overview-of-functions","dir":"Articles","previous_headings":"","what":"Overview of Functions","title":"Reptile Data Formatting Tutorial","text":"package provides two main functions working reptile taxonomic data: format_all_attributes() format_selected_attributes() functions help researchers efficiently organize access taxonomic information reptile species various sources standardized formats.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"using-format_all_attributes","dir":"Articles","previous_headings":"","what":"Using format_all_attributes()","title":"Reptile Data Formatting Tutorial","text":"format_all_attributes() function processes complete reptile dataset formats available taxonomic attributes structured tibbles (data frames).","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"syntax","dir":"Articles","previous_headings":"Using format_all_attributes()","what":"Syntax","title":"Reptile Data Formatting Tutorial","text":"","code":"format_all_attributes(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"parameters","dir":"Articles","previous_headings":"Using format_all_attributes()","what":"Parameters","title":"Reptile Data Formatting Tutorial","text":"reptile_data: dataframe list containing raw reptile taxonomic information","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"return-value","dir":"Articles","previous_headings":"Using format_all_attributes()","what":"Return Value","title":"Reptile Data Formatting Tutorial","text":"function returns list tibbles, tibble containing specific category taxonomic information: distribution: Geographic distribution information synonyms: Scientific name synonyms throughout taxonomic history higher_taxa: Taxonomic classification hierarchy subspecies: Information recognized subspecies common_names: Common names different languages reproduction: Reproductive biology information types: Type specimen information diagnosis: Diagnostic morphological features comments: Additional taxonomic notes etymology: Origin meaning scientific names references: Scientific literature references","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"example","dir":"Articles","previous_headings":"Using format_all_attributes()","what":"Example","title":"Reptile Data Formatting Tutorial","text":"","code":"library(reptiledbr) #> Loading required package: fuzzyjoin #> Welcome to reptiledbr (0.0.1) #> This package provides tools to access and query data from the Reptile Database: #>   https://reptile-database.reptarium.cz/ #> Type ?reptiledbr to get started or visit the documentation for examples and guidance. species_list <- c(   \"Lachesis muta\",   \"Python bivittatus\",   \"Crotalus atrox\",   \"Bothrops atrox insularis\", # Trinomial (con subespecie) - debería dar error   \"Lachesis sp\" )  #  reptile_data <- get_reptiledb_data(species_list) #> Starting search for 5 species... #> Maximum wait time per request: 10 seconds #> ------------------------------------------------------------------------ #> Processing: Lachesis muta #> SUCCESS: Data found for Lachesis muta #> Processing: Python bivittatus #> SUCCESS: Data found for Python bivittatus #> Processing: Crotalus atrox #> SUCCESS: Data found for Crotalus atrox #> Processing: Bothrops atrox insularis #> WARNING: Trinomial name detected: Bothrops atrox insularis #>    The database only supports binomial names (genus and species). #>    No search will be performed for trinomial names. #> Processing: Lachesis sp #> SUCCESS: Data found for Lachesis sp #> WARNING: No data table found for Lachesis sp #>    This is considered an error and the URL will be removed. #> ------------------------------------------------------------------------ #> Search summary: #>  Species found with data: 3 #>  Species not found: 0 #>  Total errors: 2 #>    - Trinomial names (not supported): 1 #>    - Pages without data tables: 1 #> ------------------------------------------------------------------------  #  reptile_data #> # A tibble: 5 × 7 #>   input_name               genus    species  url   status error_message data     #>   <chr>                    <chr>    <chr>    <chr> <chr>  <chr>         <list>   #> 1 Lachesis muta            Lachesis muta     http… succe… NA            <tibble> #> 2 Python bivittatus        Python   bivitta… http… succe… NA            <tibble> #> 3 Crotalus atrox           Crotalus atrox    http… succe… NA            <tibble> #> 4 Bothrops atrox insularis Bothrops atrox    NA    error  Trinomial na… <tibble> #> 5 Lachesis sp              Lachesis sp       NA    error  Page found b… <tibble>  # Format all attributes all_attributes <- format_all_attributes(reptile_data) #> Starting to format all attributes... #> Attribute formatting successfully completed.  # Access specific attribute categories all_attributes$distribution #> # A tibble: 11 × 4 #>    input_name        genus    species    distribution                            #>    <chr>             <chr>    <chr>      <chr>                                   #>  1 Lachesis muta     Lachesis muta       \"Colombia, E Ecuador, Brazil (Minas Ge… #>  2 Lachesis muta     Lachesis muta       \"rhombeata: Brazil (Alagoas, Bahia, Ri… #>  3 Lachesis muta     Lachesis muta       \"Type locality: Suriname; restricted t… #>  4 Python bivittatus Python   bivittatus \"SE Nepal, India (Assam, Tripura, Sikk… #>  5 Python bivittatus Python   bivittatus \"Introduced to Florida (USA)\"           #>  6 Python bivittatus Python   bivittatus \"progschai: Sulawesi; Type locality: S… #>  7 Python bivittatus Python   bivittatus \"Type locality: Java (designated by ME… #>  8 Crotalus atrox    Crotalus atrox      \"USA (SE California, S Nevada [A Heind… #>  9 Crotalus atrox    Crotalus atrox      \"Mexico (Mexico [HR 35: 190], Baja Cal… #> 10 Crotalus atrox    Crotalus atrox      \"Type locality: \\\"Indianola\\\" [Indiano… #> 11 Crotalus atrox    Crotalus atrox      \"tortugensis: Mexico (Isla Tortuga in … all_attributes$common_names #> # A tibble: 13 × 4 #>    input_name        genus    species    common_name                             #>    <chr>             <chr>    <chr>      <chr>                                   #>  1 Lachesis muta     Lachesis muta       E: South American Bushmaster            #>  2 Lachesis muta     Lachesis muta       G: Südamerikanischer Buschmeister       #>  3 Lachesis muta     Lachesis muta       rhombeata: Atlantic Forest bushmaster   #>  4 Lachesis muta     Lachesis muta       NL: Bosmeester                          #>  5 Lachesis muta     Lachesis muta       Portuguese: Bico-de-Jaca, Cobra-Topete… #>  6 Lachesis muta     Lachesis muta       S: Cuaima; Guayma concha de piña        #>  7 Python bivittatus Python   bivittatus E: Burmese Python                       #>  8 Python bivittatus Python   bivittatus G: Dunkler Tigerpython                  #>  9 Python bivittatus Python   bivittatus Chinese: 蟒                             #> 10 Crotalus atrox    Crotalus atrox      E: Western Diamond-backed Rattlesnake   #> 11 Crotalus atrox    Crotalus atrox      G: Texas-Klapperschlange, Westliche Di… #> 12 Crotalus atrox    Crotalus atrox      E: Tortuga Island Rattlesnake (tortuge… #> 13 Crotalus atrox    Crotalus atrox      S: Cascabel de Diamantes"},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"using-format_selected_attributes","dir":"Articles","previous_headings":"","what":"Using format_selected_attributes()","title":"Reptile Data Formatting Tutorial","text":"need specific taxonomic attributes, format_selected_attributes() function allows extract categories ’re interested .","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"syntax-1","dir":"Articles","previous_headings":"Using format_selected_attributes()","what":"Syntax","title":"Reptile Data Formatting Tutorial","text":"","code":"format_selected_attributes(reptile_data, attributes, quiet = FALSE)"},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"parameters-1","dir":"Articles","previous_headings":"Using format_selected_attributes()","what":"Parameters","title":"Reptile Data Formatting Tutorial","text":"reptile_data: dataframe list containing raw reptile taxonomic information attributes: character vector listing specific attributes extract quiet: Logical value. TRUE, suppresses processing messages","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"return-value-1","dir":"Articles","previous_headings":"Using format_selected_attributes()","what":"Return Value","title":"Reptile Data Formatting Tutorial","text":"Returns list containing requested attribute tibbles.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"example-1","dir":"Articles","previous_headings":"Using format_selected_attributes()","what":"Example","title":"Reptile Data Formatting Tutorial","text":"","code":"# Extract only synonyms, higher taxa, and common names selected_info <- format_selected_attributes(   reptile_data = reptile_data,   attributes = c(\"Synonym\", \"Higher Taxa\", \"Common Names\"),   quiet = TRUE )  # Access the selected information selected_info$Synonym #> # A tibble: 76 × 4 #>    input_name    genus    species synonym                                        #>    <chr>         <chr>    <chr>   <chr>                                          #>  1 Lachesis muta Lachesis muta    Crotalus mutus LINNAEUS 1766: 373              #>  2 Lachesis muta Lachesis muta    Coluber crotalinus GMELIN 1789: 1094           #>  3 Lachesis muta Lachesis muta    Scytale catenatus LATREILLE in SONNINI and LA… #>  4 Lachesis muta Lachesis muta    Scytale ammodytes LATREILLE in SONNINI and LA… #>  5 Lachesis muta Lachesis muta    Coluber alecto SHAW 1802: 405                  #>  6 Lachesis muta Lachesis muta    Lachesis mutus — DAUDIN 1803: 351              #>  7 Lachesis muta Lachesis muta    Lachesis ater — DAUDIN 1803: 354               #>  8 Lachesis muta Lachesis muta    Trigonocephalus ammodytes — OPPEL 1811: 390    #>  9 Lachesis muta Lachesis muta    Cophias crotalinus — MERREM 1820: 144          #> 10 Lachesis muta Lachesis muta    Trigonocephalus crotalinus — SCHINZ 1822: 144  #> # ℹ 66 more rows selected_info$`Higher Taxa` #> # A tibble: 20 × 4 #>    input_name        genus    species    taxon             #>    <chr>             <chr>    <chr>      <chr>             #>  1 Lachesis muta     Lachesis muta       Viperidae         #>  2 Lachesis muta     Lachesis muta       Crotalinae        #>  3 Lachesis muta     Lachesis muta       Colubroidea       #>  4 Lachesis muta     Lachesis muta       Caenophidia       #>  5 Lachesis muta     Lachesis muta       Alethinophidia    #>  6 Lachesis muta     Lachesis muta       Serpentes         #>  7 Lachesis muta     Lachesis muta       Squamata (snakes) #>  8 Python bivittatus Python   bivittatus Pythonidae        #>  9 Python bivittatus Python   bivittatus Henophidia        #> 10 Python bivittatus Python   bivittatus Pythonoidea       #> 11 Python bivittatus Python   bivittatus Alethinophidia    #> 12 Python bivittatus Python   bivittatus Serpentes         #> 13 Python bivittatus Python   bivittatus Squamata (snakes) #> 14 Crotalus atrox    Crotalus atrox      Viperidae         #> 15 Crotalus atrox    Crotalus atrox      Crotalinae        #> 16 Crotalus atrox    Crotalus atrox      Colubroidea       #> 17 Crotalus atrox    Crotalus atrox      Caenophidia       #> 18 Crotalus atrox    Crotalus atrox      Alethinophidia    #> 19 Crotalus atrox    Crotalus atrox      Serpentes         #> 20 Crotalus atrox    Crotalus atrox      Squamata (snakes) selected_info$`Common Names` #> # A tibble: 13 × 4 #>    input_name        genus    species    common_name                             #>    <chr>             <chr>    <chr>      <chr>                                   #>  1 Lachesis muta     Lachesis muta       E: South American Bushmaster            #>  2 Lachesis muta     Lachesis muta       G: Südamerikanischer Buschmeister       #>  3 Lachesis muta     Lachesis muta       rhombeata: Atlantic Forest bushmaster   #>  4 Lachesis muta     Lachesis muta       NL: Bosmeester                          #>  5 Lachesis muta     Lachesis muta       Portuguese: Bico-de-Jaca, Cobra-Topete… #>  6 Lachesis muta     Lachesis muta       S: Cuaima; Guayma concha de piña        #>  7 Python bivittatus Python   bivittatus E: Burmese Python                       #>  8 Python bivittatus Python   bivittatus G: Dunkler Tigerpython                  #>  9 Python bivittatus Python   bivittatus Chinese: 蟒                             #> 10 Crotalus atrox    Crotalus atrox      E: Western Diamond-backed Rattlesnake   #> 11 Crotalus atrox    Crotalus atrox      G: Texas-Klapperschlange, Westliche Di… #> 12 Crotalus atrox    Crotalus atrox      E: Tortuga Island Rattlesnake (tortuge… #> 13 Crotalus atrox    Crotalus atrox      S: Cascabel de Diamantes"},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"working-with-the-formatted-data","dir":"Articles","previous_headings":"","what":"Working with the Formatted Data","title":"Reptile Data Formatting Tutorial","text":"formatted reptile data, can use standard R data manipulation techniques analyze information:","code":"# Find all venomous species all_attributes$comments |>    dplyr::filter(stringr::str_detect(comment_detail, \"Venomous\")) #> # A tibble: 2 × 4 #>   input_name     genus    species comment_detail                                 #>   <chr>          <chr>    <chr>   <chr>                                          #> 1 Lachesis muta  Lachesis muta    Venomous!                                      #> 2 Crotalus atrox Crotalus atrox   Venomous! Crotalus atrox is responsible for m…   # Extract distribution information for a specific species all_attributes$distribution |>   dplyr::filter(input_name == \"Crotalus atrox\") #> # A tibble: 4 × 4 #>   input_name     genus    species distribution                                   #>   <chr>          <chr>    <chr>   <chr>                                          #> 1 Crotalus atrox Crotalus atrox   \"USA (SE California, S Nevada [A Heindl, pers… #> 2 Crotalus atrox Crotalus atrox   \"Mexico (Mexico [HR 35: 190], Baja California… #> 3 Crotalus atrox Crotalus atrox   \"Type locality: \\\"Indianola\\\" [Indianola, Cal… #> 4 Crotalus atrox Crotalus atrox   \"tortugensis: Mexico (Isla Tortuga in the Gul…"},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"data-structure","dir":"Articles","previous_headings":"","what":"Data Structure","title":"Reptile Data Formatting Tutorial","text":"formatted attribute tibble includes least standard columns: input_name: original species name provided genus: genus name species: species epithet Attribute-specific column (e.g., distribution, common_name, synonym, etc.) consistent structure allows easy filtering, joining, analysis across different attribute categories.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/format_all.html","id":"tips-for-effective-use","dir":"Articles","previous_headings":"","what":"Tips for Effective Use","title":"Reptile Data Formatting Tutorial","text":"working large datasets, use format_selected_attributes() improve performance Consider species may multiple entries certain categories (e.g., multiple common names distribution records) input_name column provides reliable key joining information across different attribute tibbles effectively using formatting functions, can streamline reptile taxonomic research data analysis workflows.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"can install reptiledbr package GitHub using:","code":"# install.packages(\"pak\") pak::pak(\"PaulESantos/reptiledbr\")"},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"loading-the-package","dir":"Articles","previous_headings":"Basic Usage","what":"1. Loading the package","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"Let’s start loading package:","code":"library(reptiledbr)"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"retrieving-data-for-specific-species","dir":"Articles","previous_headings":"Basic Usage","what":"2. Retrieving data for specific species","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"main function package get_reptiledb_data(), allows search one species: function connect Reptile Database, search species, download available information. process, ’ll see progress messages like:","code":"# Create a list of species to search species_list <- c(   \"Lachesis muta\",   \"Python bivittatus\",   \"Crotalus atrox\" ) # Get data for these species reptile_data <- get_reptiledb_data(species_list) #> Starting search for 3 species... #> Maximum wait time per request: 10 seconds #> ------------------------------------------------------------------------ #> Processing: Lachesis muta #> SUCCESS: Data found for Lachesis muta #> Processing: Python bivittatus #> SUCCESS: Data found for Python bivittatus #> Processing: Crotalus atrox #> SUCCESS: Data found for Crotalus atrox #> ------------------------------------------------------------------------ #> Search summary: #>  Species found with data: 3 #>  Species not found: 0 #>  Total errors: 0 #> ------------------------------------------------------------------------"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"understanding-the-returned-data","dir":"Articles","previous_headings":"Basic Usage","what":"3. Understanding the returned data","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"get_reptiledb_data() function returns tibble columns containing metadata search actual data retrieved: data column contains nested tibbles information scraped species page.","code":"reptile_data #> # A tibble: 3 × 7 #>   input_name        genus    species    url        status error_message data     #>   <chr>             <chr>    <chr>      <chr>      <chr>  <chr>         <list>   #> 1 Lachesis muta     Lachesis muta       http://re… succe… NA            <tibble> #> 2 Python bivittatus Python   bivittatus http://re… succe… NA            <tibble> #> 3 Crotalus atrox    Crotalus atrox      http://re… succe… NA            <tibble>"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"formatting-data-with-specialized-functions","dir":"Articles","previous_headings":"Basic Usage","what":"4. Formatting data with specialized functions","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"reptiledbr provides several specialized functions extract format specific types information:","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"synonyms","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"Synonyms","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_synonyms(reptile_data) #> # A tibble: 76 × 4 #>    input_name    genus    species synonym                                        #>    <chr>         <chr>    <chr>   <chr>                                          #>  1 Lachesis muta Lachesis muta    Crotalus mutus LINNAEUS 1766: 373              #>  2 Lachesis muta Lachesis muta    Coluber crotalinus GMELIN 1789: 1094           #>  3 Lachesis muta Lachesis muta    Scytale catenatus LATREILLE in SONNINI and LA… #>  4 Lachesis muta Lachesis muta    Scytale ammodytes LATREILLE in SONNINI and LA… #>  5 Lachesis muta Lachesis muta    Coluber alecto SHAW 1802: 405                  #>  6 Lachesis muta Lachesis muta    Lachesis mutus — DAUDIN 1803: 351              #>  7 Lachesis muta Lachesis muta    Lachesis ater — DAUDIN 1803: 354               #>  8 Lachesis muta Lachesis muta    Trigonocephalus ammodytes — OPPEL 1811: 390    #>  9 Lachesis muta Lachesis muta    Cophias crotalinus — MERREM 1820: 144          #> 10 Lachesis muta Lachesis muta    Trigonocephalus crotalinus — SCHINZ 1822: 144  #> # ℹ 66 more rows"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"distribution-information","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"Distribution information","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_distribution(reptile_data) #> # A tibble: 11 × 4 #>    input_name        genus    species    distribution                            #>    <chr>             <chr>    <chr>      <chr>                                   #>  1 Lachesis muta     Lachesis muta       \"Colombia, E Ecuador, Brazil (Minas Ge… #>  2 Lachesis muta     Lachesis muta       \"rhombeata: Brazil (Alagoas, Bahia, Ri… #>  3 Lachesis muta     Lachesis muta       \"Type locality: Suriname; restricted t… #>  4 Python bivittatus Python   bivittatus \"SE Nepal, India (Assam, Tripura, Sikk… #>  5 Python bivittatus Python   bivittatus \"Introduced to Florida (USA)\"           #>  6 Python bivittatus Python   bivittatus \"progschai: Sulawesi; Type locality: S… #>  7 Python bivittatus Python   bivittatus \"Type locality: Java (designated by ME… #>  8 Crotalus atrox    Crotalus atrox      \"USA (SE California, S Nevada [A Heind… #>  9 Crotalus atrox    Crotalus atrox      \"Mexico (Mexico [HR 35: 190], Baja Cal… #> 10 Crotalus atrox    Crotalus atrox      \"Type locality: \\\"Indianola\\\" [Indiano… #> 11 Crotalus atrox    Crotalus atrox      \"tortugensis: Mexico (Isla Tortuga in …"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"higher-taxonomic-classifications","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"Higher taxonomic classifications","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_higher_taxa(reptile_data) #> # A tibble: 20 × 4 #>    input_name        genus    species    taxon             #>    <chr>             <chr>    <chr>      <chr>             #>  1 Lachesis muta     Lachesis muta       Viperidae         #>  2 Lachesis muta     Lachesis muta       Crotalinae        #>  3 Lachesis muta     Lachesis muta       Colubroidea       #>  4 Lachesis muta     Lachesis muta       Caenophidia       #>  5 Lachesis muta     Lachesis muta       Alethinophidia    #>  6 Lachesis muta     Lachesis muta       Serpentes         #>  7 Lachesis muta     Lachesis muta       Squamata (snakes) #>  8 Python bivittatus Python   bivittatus Pythonidae        #>  9 Python bivittatus Python   bivittatus Henophidia        #> 10 Python bivittatus Python   bivittatus Pythonoidea       #> 11 Python bivittatus Python   bivittatus Alethinophidia    #> 12 Python bivittatus Python   bivittatus Serpentes         #> 13 Python bivittatus Python   bivittatus Squamata (snakes) #> 14 Crotalus atrox    Crotalus atrox      Viperidae         #> 15 Crotalus atrox    Crotalus atrox      Crotalinae        #> 16 Crotalus atrox    Crotalus atrox      Colubroidea       #> 17 Crotalus atrox    Crotalus atrox      Caenophidia       #> 18 Crotalus atrox    Crotalus atrox      Alethinophidia    #> 19 Crotalus atrox    Crotalus atrox      Serpentes         #> 20 Crotalus atrox    Crotalus atrox      Squamata (snakes)"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"subspecies-information","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"Subspecies information","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_subspecies(reptile_data) #> # A tibble: 2 × 4 #>   input_name        genus  species    subspecies                                 #>   <chr>             <chr>  <chr>      <chr>                                      #> 1 Python bivittatus Python bivittatus Python bivittatus progschai JACOBS, AULYI… #> 2 Python bivittatus Python bivittatus Python bivittatus bivittatus KUHL 1820"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"common-names","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"Common names","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_common_names(reptile_data) #> # A tibble: 13 × 4 #>    input_name        genus    species    common_name                             #>    <chr>             <chr>    <chr>      <chr>                                   #>  1 Lachesis muta     Lachesis muta       E: South American Bushmaster            #>  2 Lachesis muta     Lachesis muta       G: Südamerikanischer Buschmeister       #>  3 Lachesis muta     Lachesis muta       rhombeata: Atlantic Forest bushmaster   #>  4 Lachesis muta     Lachesis muta       NL: Bosmeester                          #>  5 Lachesis muta     Lachesis muta       Portuguese: Bico-de-Jaca, Cobra-Topete… #>  6 Lachesis muta     Lachesis muta       S: Cuaima; Guayma concha de piña        #>  7 Python bivittatus Python   bivittatus E: Burmese Python                       #>  8 Python bivittatus Python   bivittatus G: Dunkler Tigerpython                  #>  9 Python bivittatus Python   bivittatus Chinese: 蟒                             #> 10 Crotalus atrox    Crotalus atrox      E: Western Diamond-backed Rattlesnake   #> 11 Crotalus atrox    Crotalus atrox      G: Texas-Klapperschlange, Westliche Di… #> 12 Crotalus atrox    Crotalus atrox      E: Tortuga Island Rattlesnake (tortuge… #> 13 Crotalus atrox    Crotalus atrox      S: Cascabel de Diamantes"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"reproduction-information","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"Reproduction information","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_reproduction(reptile_data) #> # A tibble: 3 × 4 #>   input_name        genus    species    reproduction_detail                      #>   <chr>             <chr>    <chr>      <chr>                                    #> 1 Lachesis muta     Lachesis muta       oviparous; one of the few snakes that s… #> 2 Python bivittatus Python   bivittatus GROOT et al. (2003) and KUHN & SCHMIDT … #> 3 Crotalus atrox    Crotalus atrox      ovovivparous. C. atrox and C. horridus …"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"type-specimens","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"Type specimens","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_types(reptile_data) #> # A tibble: 6 × 4 #>   input_name        genus    species    type_detail                              #>   <chr>             <chr>    <chr>      <chr>                                    #> 1 Lachesis muta     Lachesis muta       \"Holotype: NRM = NHRM. According to And… #> 2 Lachesis muta     Lachesis muta       \"Holotype: ZSM, uncatalogued specimen(s… #> 3 Python bivittatus Python   bivittatus \"Holotype: iconotype: Plate in SEBA 173… #> 4 Python bivittatus Python   bivittatus \"Holotype: ZFMK 87481 [progschai]\"       #> 5 Crotalus atrox    Crotalus atrox      \"Holotype: USNM 7761\"                    #> 6 Crotalus atrox    Crotalus atrox      \"Holotype: CAS 50515 [tortugensis]\""},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"diagnosis-information","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"Diagnosis information","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_diagnosis(reptile_data) #> # A tibble: 3 × 4 #>   input_name        genus    species    diagnosis_detail                         #>   <chr>             <chr>    <chr>      <chr>                                    #> 1 Lachesis muta     Lachesis muta       Diagnosis: Distinguished from L. stenop… #> 2 Python bivittatus Python   bivittatus Diagnosis: Large serpents; labials sepa… #> 3 Crotalus atrox    Crotalus atrox      Additional details, e.g. a detailed des…"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"comments","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"Comments","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_comments(reptile_data) #> # A tibble: 15 × 4 #>    input_name        genus    species    comment_detail                          #>    <chr>             <chr>    <chr>      <chr>                                   #>  1 Lachesis muta     Lachesis muta       \"Venomous!\"                             #>  2 Lachesis muta     Lachesis muta       \"Synonymy: Lachesis muta has been spli… #>  3 Lachesis muta     Lachesis muta       \"Type species: Lachesis mutus is the t… #>  4 Lachesis muta     Lachesis muta       \"Distribution: see maps in Barrio-Amor… #>  5 Python bivittatus Python   bivittatus \"Subspecies: This species has been con… #>  6 Python bivittatus Python   bivittatus \"Hybridization: \\\"The evidence for the… #>  7 Python bivittatus Python   bivittatus \"Distribution: Records from Sumatra an… #>  8 Python bivittatus Python   bivittatus \"DNA barcodes suggested multiple speci… #>  9 Python bivittatus Python   bivittatus \"Genome: Python (molurus) bivittatus w… #> 10 Crotalus atrox    Crotalus atrox      \"Venomous! Crotalus atrox is responsib… #> 11 Crotalus atrox    Crotalus atrox      \"Nomenclature: Hoser’s 2009 classifica… #> 12 Crotalus atrox    Crotalus atrox      \"Synonymy: AMARAL 1929 synonymed C. to… #> 13 Crotalus atrox    Crotalus atrox      \"Similar species: C. scutulatus.\"       #> 14 Crotalus atrox    Crotalus atrox      \"Love (2013) reports melanism in C. at… #> 15 Crotalus atrox    Crotalus atrox      \"Habitat: usually terrestrial, occasio…"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"etymology","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"Etymology","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_etymology(reptile_data) #> # A tibble: 3 × 4 #>   input_name        genus    species    etymology_detail                         #>   <chr>             <chr>    <chr>      <chr>                                    #> 1 Lachesis muta     Lachesis muta       \"The specific name muta is from the Lat… #> 2 Python bivittatus Python   bivittatus \"The species epithet, bivittatus, comes… #> 3 Crotalus atrox    Crotalus atrox      \"The specific name, \\\"atrox,\\\" is a Gre…"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"references","dir":"Articles","previous_headings":"Basic Usage > 4. Formatting data with specialized functions","what":"References","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"","code":"format_references(reptile_data) #> # A tibble: 409 × 4 #>    input_name    genus    species reference                                      #>    <chr>         <chr>    <chr>   <chr>                                          #>  1 Lachesis muta Lachesis muta    Alves, Fátima Q.; AntÃ´nio J. S. ArgÃ´lo, and… #>  2 Lachesis muta Lachesis muta    Amaral, A. do 1925. On the Oviparity of Lache… #>  3 Lachesis muta Lachesis muta    Amaral,A. do 1926. 4.a nota de nomenclatura O… #>  4 Lachesis muta Lachesis muta    Andersson, L.G. 1899. Catalogue of Linnean ty… #>  5 Lachesis muta Lachesis muta    ANDRADE LIMA, J.H., DIAS, E.G., COSTA, R.D.L.… #>  6 Lachesis muta Lachesis muta    Araujo Filho, João Antonio de, Cícero Ricardo… #>  7 Lachesis muta Lachesis muta    Arteaga, A.; Bustamante, L.; Vieira, J. 2024.… #>  8 Lachesis muta Lachesis muta    Avila-Pires, Teresa C.S.; Kleiton R. Alves-Si… #>  9 Lachesis muta Lachesis muta    Barbour, Thomas 1930. The bushmaster in the C… #> 10 Lachesis muta Lachesis muta    Barrio-Amorós, Cesar L.; Greivin Corrales, Sy… #> # ℹ 399 more rows"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"handling-special-cases","dir":"Articles","previous_headings":"","what":"Handling Special Cases","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"package provides proper error handling various cases:","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"trinomial-names-subspecies","dir":"Articles","previous_headings":"Handling Special Cases","what":"1. Trinomial names (subspecies)","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"search trinomial name (genus + species + subspecies), package issue warning skip search:","code":"species_list <- c(   \"Lachesis muta\",   \"Bothrops atrox insularis\"  # Trinomial name ) reptile_data <- get_reptiledb_data(species_list) #> Starting search for 2 species... #> Maximum wait time per request: 10 seconds #> ------------------------------------------------------------------------ #> Processing: Lachesis muta #> SUCCESS: Data found for Lachesis muta #> Processing: Bothrops atrox insularis #> WARNING: Trinomial name detected: Bothrops atrox insularis #>    The database only supports binomial names (genus and species). #>    No search will be performed for trinomial names. #> ------------------------------------------------------------------------ #> Search summary: #>  Species found with data: 1 #>  Species not found: 0 #>  Total errors: 1 #>    - Trinomial names (not supported): 1 #> ------------------------------------------------------------------------"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"incomplete-species-names","dir":"Articles","previous_headings":"Handling Special Cases","what":"2. Incomplete species names","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"package can also handle incomplete species names, warn data found:","code":"species_list <- c(   \"Lachesis muta\",   \"Lachesis sp\"  # Incomplete species name ) reptile_data <- get_reptiledb_data(species_list) #> Starting search for 2 species... #> Maximum wait time per request: 10 seconds #> ------------------------------------------------------------------------ #> Processing: Lachesis muta #> SUCCESS: Data found for Lachesis muta #> Processing: Lachesis sp #> SUCCESS: Data found for Lachesis sp #> WARNING: No data table found for Lachesis sp #>    This is considered an error and the URL will be removed. #> ------------------------------------------------------------------------ #> Search summary: #>  Species found with data: 1 #>  Species not found: 0 #>  Total errors: 1 #>    - Pages without data tables: 1 #> ------------------------------------------------------------------------"},{"path":"https://paulesantos.github.io/reptiledbr/articles/introduction.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Introduction to reptiledbr: Accessing The Reptile Database in R","text":"reptiledbr provides easy structured way access reptile species information Reptile Database. package handles many common edge cases provides specialized functions extract format specific types information. makes valuable tool herpetologists, ecologists, researchers working reptile data. information package, including advanced usage complete function documentation, please refer package’s documentation.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/local_search.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Local Taxonomic Searches with reptiledbr","text":"reptiledbr package allows users access taxonomic information reptiles directly R without constant need make web queries Reptile Database server. provides several advantages: Faster processing working offline Ability efficiently verify large taxonomic datasets Reduction requests Reptile Database server Consistency results, even without stable internet connection vignette demonstrates perform local searches using package’s main functions.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/local_search.html","id":"main-functions-for-local-searches","dir":"Articles","previous_headings":"","what":"Main Functions for Local Searches","title":"Local Taxonomic Searches with reptiledbr","text":"reptiledbr package offers three key functions performing local taxonomic searches: reptiledbr_exact(): exact searches scientific names reptiledbr_partial(): searches allow partial matches (fuzzy matching) search_reptiledbr(): Flexible function combines exact partial search capabilities list_subspecies_reptiledbr(): obtain information subspecies","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/articles/local_search.html","id":"exact-search-for-species-names","dir":"Articles","previous_headings":"Practical Examples","what":"Exact Search for Species Names","title":"Local Taxonomic Searches with reptiledbr","text":"reptiledbr_exact() function verifies provided species names exist exactly written database. function useful need verify validity specific taxonomic names. can observed, exact search returns matches names correctly written. Names typos incorrect formats (trinomials) recognized.","code":"library(reptiledbr) #> Loading required package: fuzzyjoin #> Welcome to reptiledbr (0.0.1) #> This package provides tools to access and query data from the Reptile Database: #>   https://reptile-database.reptarium.cz/ #> Type ?reptiledbr to get started or visit the documentation for examples and guidance.  # Define a vector of species names to search species_names <- c(   \"Lachesis muta\",   \"Python bivittatus\",   \"Crotalus atrox\",   \"Bothrops atrox insularis\", # Trinomial (with subspecies) - will generate an error   \"Lachesis sp\",   \"Crotalus atroxx\", # Intentional typo   \"Anolis liogaster\",   \"Lachesis mutta\", # Intentional typo   \"Python bivitatus\" # Intentional typo )  # Perform exact search reptiledbr_exact(species_names) #> # A tibble: 9 × 10 #>      id input_name found species_match order family genus epithet author message #>   <int> <chr>      <lgl> <chr>         <chr> <chr>  <chr> <chr>   <chr>  <chr>   #> 1     1 Lachesis … TRUE  Lachesis muta Serp… Viper… Lach… muta    Linna… No sub… #> 2     2 Python bi… TRUE  Python bivit… Serp… Pytho… Pyth… bivitt… Kuhl … Specie… #> 3     3 Crotalus … TRUE  Crotalus atr… Serp… Viper… Crot… atrox   Baird… No sub… #> 4     4 Bothrops … FALSE NA            NA    NA     NA    NA      NA     Specie… #> 5     5 Lachesis … FALSE NA            NA    NA     NA    NA      NA     Specie… #> 6     6 Crotalus … FALSE NA            NA    NA     NA    NA      NA     Specie… #> 7     7 Anolis li… TRUE  Anolis lioga… Saur… Anoli… Anol… liogas… Boule… No sub… #> 8     8 Lachesis … FALSE NA            NA    NA     NA    NA      NA     Specie… #> 9     9 Python bi… FALSE NA            NA    NA     NA    NA      NA     Specie…"},{"path":"https://paulesantos.github.io/reptiledbr/articles/local_search.html","id":"partial-match-search","dir":"Articles","previous_headings":"Practical Examples","what":"Partial Match Search","title":"Local Taxonomic Searches with reptiledbr","text":"reptiledbr_partial() function flexible uses fuzzy matching techniques identify species even minor typos variations spelling. Notice reptiledbr_partial() able find matches “Crotalus atroxx”, “Lachesis mutta”, “Python bivitatus” despite typos, still recognize incorrect formats trinomials incomplete names (e.g., “Lachesis sp”).","code":"# Perform search with partial matching reptiledbr_partial(species_names) #> # A tibble: 9 × 11 #>      id input_name         found species_match order family genus epithet author #>   <int> <chr>              <lgl> <chr>         <chr> <chr>  <chr> <chr>   <chr>  #> 1     1 Lachesis muta      TRUE  Lachesis muta Serp… Viper… Lach… muta    Linna… #> 2     2 Python bivittatus  TRUE  Python bivit… Serp… Pytho… Pyth… bivitt… Kuhl … #> 3     3 Crotalus atrox     TRUE  Crotalus atr… Serp… Viper… Crot… atrox   Baird… #> 4     4 Bothrops atrox in… FALSE NA            NA    NA     NA    NA      NA     #> 5     5 Lachesis sp        FALSE NA            NA    NA     NA    NA      NA     #> 6     6 Crotalus atroxx    TRUE  Crotalus atr… Serp… Viper… Crot… atrox   Baird… #> 7     7 Anolis liogaster   TRUE  Anolis lioga… Saur… Anoli… Anol… liogas… Boule… #> 8     8 Lachesis mutta     TRUE  Lachesis muta Serp… Viper… Lach… muta    Linna… #> 9     9 Python bivitatus   TRUE  Python bivit… Serp… Pytho… Pyth… bivitt… Kuhl … #> # ℹ 2 more variables: fuzzy_match <lgl>, message <chr>"},{"path":"https://paulesantos.github.io/reptiledbr/articles/local_search.html","id":"flexible-search-with-additional-options","dir":"Articles","previous_headings":"Practical Examples","what":"Flexible Search with Additional Options","title":"Local Taxonomic Searches with reptiledbr","text":"search_reptiledbr() function offers greater flexibility, allowing specify whether use partial matching :","code":"# Define a list of valid species subspecies_names <- c(\"Lachesis muta\",                       \"Anilius scytale\",                      \"Anolis bahorucoensis\",                      \"Anolis baleatus\",                      \"Crotalus atrox\",                      \"Anolis barahonae\",                      \"Anolis bremeri\")  # Exact search (without fuzzy matching) search_reptiledbr(subspecies_names, use_fuzzy = FALSE) #> # A tibble: 7 × 12 #>      id input_name found species_match order family genus epithet author message #>   <int> <chr>      <lgl> <chr>         <chr> <chr>  <chr> <chr>   <chr>  <chr>   #> 1     1 Lachesis … TRUE  Lachesis muta Serp… Viper… Lach… muta    Linna… No sub… #> 2     2 Anilius s… TRUE  Anilius scyt… Serp… Anili… Anil… scytale Linna… Specie… #> 3     3 Anolis ba… TRUE  Anolis bahor… Saur… Anoli… Anol… bahoru… Noble… Specie… #> 4     4 Anolis ba… TRUE  Anolis balea… Saur… Anoli… Anol… baleat… Cope … Specie… #> 5     5 Crotalus … TRUE  Crotalus atr… Serp… Viper… Crot… atrox   Baird… No sub… #> 6     6 Anolis ba… TRUE  Anolis barah… Saur… Anoli… Anol… baraho… Willi… Specie… #> 7     7 Anolis br… TRUE  Anolis breme… Saur… Anoli… Anol… bremeri Barbo… Specie… #> # ℹ 2 more variables: match_type <chr>, fuzzy_match <lgl>"},{"path":"https://paulesantos.github.io/reptiledbr/articles/local_search.html","id":"obtaining-subspecies-information","dir":"Articles","previous_headings":"Practical Examples","what":"Obtaining Subspecies Information","title":"Local Taxonomic Searches with reptiledbr","text":"particularly useful feature ability list recognized subspecies given species using list_subspecies_reptiledbr(): can also combine partial matching search subspecies retrieval:","code":"# List all subspecies for the found species search_reptiledbr(subspecies_names, use_fuzzy = FALSE) |>    list_subspecies_reptiledbr() #> # A tibble: 20 × 3 #>    species              subspecies_name                    author                #>    <chr>                <chr>                              <chr>                 #>  1 Anilius scytale      Anilius scytale phelpsorum         Roze 1958             #>  2 Anilius scytale      Anilius scytale scytale            Linnaeus 1758         #>  3 Anolis bahorucoensis Anolis bahorucoensis bahorucoensis Noble & Hassler 1933  #>  4 Anolis bahorucoensis Anolis bahorucoensis southerlandi  Schwartz 1978         #>  5 Anolis baleatus      Anolis baleatus baleatus           Cope 1864             #>  6 Anolis baleatus      Anolis baleatus altager            Schwartz 1975         #>  7 Anolis baleatus      Anolis baleatus caeruleolatus      Schwartz 1974         #>  8 Anolis baleatus      Anolis baleatus fraudator          Schwartz 1974         #>  9 Anolis baleatus      Anolis baleatus lineatacervix      Schwartz 1978         #> 10 Anolis baleatus      Anolis baleatus litorisilva        Schwartz 1974         #> 11 Anolis baleatus      Anolis baleatus multistruppus      Schwartz 1974         #> 12 Anolis baleatus      Anolis baleatus samanae            Schwartz 1974         #> 13 Anolis baleatus      Anolis baleatus scelestus          Schwartz 1974         #> 14 Anolis baleatus      Anolis baleatus sublimis           Schwartz 1974         #> 15 Anolis barahonae     Anolis barahonae barahonae         Williams 1962         #> 16 Anolis barahonae     Anolis barahonae albocellatus      Schwartz 1974         #> 17 Anolis barahonae     Anolis barahonae ininquinatus      Cullom & Schwartz 19… #> 18 Anolis barahonae     Anolis barahonae mulitus           Cullom & Schwartz 19… #> 19 Anolis bremeri       Anolis bremeri bremeri             Barbour 1914          #> 20 Anolis bremeri       Anolis bremeri insulaepinorum      Garrido 1972 # Partial matching search followed by subspecies listing reptiledbr_partial(c(\"Lachesis mutta\",                      \"Python bivitatus\",                     \"Anolis barahonae\")) |>    list_subspecies_reptiledbr() #> # A tibble: 6 × 3 #>   species           subspecies_name               author                      #>   <chr>             <chr>                         <chr>                       #> 1 Anolis barahonae  Anolis barahonae barahonae    Williams 1962               #> 2 Anolis barahonae  Anolis barahonae albocellatus Schwartz 1974               #> 3 Anolis barahonae  Anolis barahonae ininquinatus Cullom & Schwartz 1980      #> 4 Anolis barahonae  Anolis barahonae mulitus      Cullom & Schwartz 1980      #> 5 Python bivittatus Python bivittatus progschai   Jacobs, Aulyia & Böhme 2009 #> 6 Python bivittatus Python bivittatus bivittatus  Kuhl 1820"},{"path":"https://paulesantos.github.io/reptiledbr/articles/local_search.html","id":"recommended-workflow","dir":"Articles","previous_headings":"","what":"Recommended Workflow","title":"Local Taxonomic Searches with reptiledbr","text":"working large taxonomic datasets, recommend following workflow: Perform initial search reptiledbr_exact() identify names match exactly names found, use reptiledbr_partial() capture possible typos Finally, use list_subspecies_reptiledbr() obtain detailed information subspecies needed","code":""},{"path":"https://paulesantos.github.io/reptiledbr/articles/local_search.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Local Taxonomic Searches with reptiledbr","text":"reptiledbr package provides efficient tools verifying obtaining taxonomic information reptiles without need make constant queries Reptile Database serverusing reptiledbr::search_reptiledbr(). greatly facilitates working large datasets allows consistent taxonomic verification even without internet connection. local search functions particularly useful researchers professionals working herpetological data, enabling efficient cleaning validation species lists, identification common typos, access --date taxonomic information reptiles.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Efren Santos Andrade. Author, maintainer.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Santos Andrade P (2025). reptiledbr: Interface Reptile Database Querying Retrieving Taxonomic Data. R package version 0.0.1, https://github.com/PaulESantos/reptiledbr.","code":"@Manual{,   title = {reptiledbr: Interface to the Reptile Database for Querying and Retrieving Taxonomic Data},   author = {Paul Efren {Santos Andrade}},   year = {2025},   note = {R package version 0.0.1},   url = {https://github.com/PaulESantos/reptiledbr}, }"},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"reptiledbr R package provides programmatic access data Reptile Database, comprehensive curated source taxonomic information living reptiles. includes snakes, lizards, turtles, tuataras, amphisbaenians, crocodiles—12,000 species 2,800 subspecies. goal reptiledbr facilitate access reptile taxonomy, nomenclature, distribution, associated scientific literature reproducible efficient way researchers, ecologists, educators, biodiversity data users.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"can install development version reptiledbr GitHub :","code":"# install.packages(\"pak\") pak::pak(\"PaulESantos/reptiledbr\")"},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"Query species scientific name Retrieve synonyms, type localities, distributions Access bibliographic references species descriptions Work online (direct server queries) offline (local database) Fully integrated R environment analysis","code":""},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"data-source","dir":"","previous_headings":"","what":"Data Source","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"package uses data Reptile Database, open community-driven resource curated herpetologists volunteers around world. focuses taxonomic data including: Scientific names synonyms Type specimens distribution Original literature references database initiated Peter Uetz 1995 currently curated volunteer team. information, visit: www.reptile-database.org Note: package officially affiliated Reptile Database. provides independent R interface facilitate access public data.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"online-access","dir":"","previous_headings":"Usage","what":"Online Access","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"Query data directly Reptile Database server:","code":"library(reptiledbr) #> Cargando paquete requerido: fuzzyjoin #> Welcome to reptiledbr (0.0.1) #> This package provides tools to access and query data from the Reptile Database: #>   https://reptile-database.reptarium.cz/ #> Type ?reptiledbr to get started or visit the documentation for examples and guidance. # Get detailed information for a specific species reptiledb <- get_reptiledb_data(\"Anolis carolinensis\", quiet = FALSE) #> Starting search for 1 species... #> Maximum wait time per request: 10 seconds #> ------------------------------------------------------------------------ #> Processing: Anolis carolinensis #> SUCCESS: Data found for Anolis carolinensis #> ------------------------------------------------------------------------ #> Search summary: #>  Species found with data: 1 #>  Species not found: 0 #>  Total errors: 0 #> ------------------------------------------------------------------------ # Format the results in a user-friendly way all_attributes <- reptiledb |>    reptiledbr::format_all_attributes() #> Starting to format all attributes... #> Attribute formatting successfully completed.  all_attributes$distribution #> # A tibble: 11 × 4 #>    input_name          genus  species      distribution                          #>    <chr>               <chr>  <chr>        <chr>                                 #>  1 Anolis carolinensis Anolis carolinensis USA (E Texas, SE Oklahoma, S Arkansa… #>  2 Anolis carolinensis Anolis carolinensis Bahamas, Grand Cayman Islands (HR 33… #>  3 Anolis carolinensis Anolis carolinensis Introduced to Hawaii (fide MCKEOWN 1… #>  4 Anolis carolinensis Anolis carolinensis Introduced to Japan (Chichizima Is. … #>  5 Anolis carolinensis Anolis carolinensis Introduced to Micronesia and Guam (G… #>  6 Anolis carolinensis Anolis carolinensis May have been introduced to Tenerife… #>  7 Anolis carolinensis Anolis carolinensis Introduced to Northern Mariana Islan… #>  8 Anolis carolinensis Anolis carolinensis Introduced to Mexico (Nuevo León, Lu… #>  9 Anolis carolinensis Anolis carolinensis Introduced to California fide Hansen… #> 10 Anolis carolinensis Anolis carolinensis baccatus: Mexico; Type locality: Mex… #> 11 Anolis carolinensis Anolis carolinensis seminolus: USA (Florida); Type local… all_attributes$common_names #> # A tibble: 3 × 4 #>   input_name          genus  species      common_name                            #>   <chr>               <chr>  <chr>        <chr>                                  #> 1 Anolis carolinensis Anolis carolinensis E: North American Green Anole, Green … #> 2 Anolis carolinensis Anolis carolinensis S: Anolis Verde                        #> 3 Anolis carolinensis Anolis carolinensis G: Rotkehlanolis"},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"localoffline-access","dir":"","previous_headings":"Usage","what":"Local/Offline Access","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"Perform taxonomic verification without internet connection:","code":"library(reptiledbr)  # Define a vector of species names to verify species_names <- c(   \"Lachesis muta\",   \"Python bivittatus\",   \"Crotalus atrox\",   \"Lachesis mutta\"  # Intentional typo )  # Exact search (strict matching) reptiledbr_exact(species_names) #> # A tibble: 4 × 10 #>      id input_name found species_match order family genus epithet author message #>   <int> <chr>      <lgl> <chr>         <chr> <chr>  <chr> <chr>   <chr>  <chr>   #> 1     1 Lachesis … TRUE  Lachesis muta Serp… Viper… Lach… muta    Linna… No sub… #> 2     2 Python bi… TRUE  Python bivit… Serp… Pytho… Pyth… bivitt… Kuhl … Specie… #> 3     3 Crotalus … TRUE  Crotalus atr… Serp… Viper… Crot… atrox   Baird… No sub… #> 4     4 Lachesis … FALSE <NA>          <NA>  <NA>   <NA>  <NA>    <NA>   Specie…  # Partial/fuzzy search (finds matches despite typos) reptiledbr_partial(species_names) #> # A tibble: 4 × 11 #>      id input_name        found species_match  order family genus epithet author #>   <int> <chr>             <lgl> <chr>          <chr> <chr>  <chr> <chr>   <chr>  #> 1     1 Lachesis muta     TRUE  Lachesis muta  Serp… Viper… Lach… muta    Linna… #> 2     2 Python bivittatus TRUE  Python bivitt… Serp… Pytho… Pyth… bivitt… Kuhl … #> 3     3 Crotalus atrox    TRUE  Crotalus atrox Serp… Viper… Crot… atrox   Baird… #> 4     4 Lachesis mutta    TRUE  Lachesis muta  Serp… Viper… Lach… muta    Linna… #> # ℹ 2 more variables: fuzzy_match <lgl>, message <chr>  # Flexible search with additional options search_reptiledbr(species_names, use_fuzzy = TRUE) #> # A tibble: 4 × 12 #>      id input_name found species_match order family genus epithet author message #>   <int> <chr>      <lgl> <chr>         <chr> <chr>  <chr> <chr>   <chr>  <chr>   #> 1     1 Lachesis … TRUE  Lachesis muta Serp… Viper… Lach… muta    Linna… No sub… #> 2     2 Python bi… TRUE  Python bivit… Serp… Pytho… Pyth… bivitt… Kuhl … Specie… #> 3     3 Crotalus … TRUE  Crotalus atr… Serp… Viper… Crot… atrox   Baird… No sub… #> 4     4 Lachesis … TRUE  Lachesis muta Serp… Viper… Lach… muta    Linna… No sub… #> # ℹ 2 more variables: match_type <chr>, fuzzy_match <lgl>  # List subspecies for specific species search_reptiledbr(c(\"Anolis barahonae\")) |>    list_subspecies_reptiledbr() #> # A tibble: 4 × 3 #>   species          subspecies_name               author                 #>   <chr>            <chr>                         <chr>                  #> 1 Anolis barahonae Anolis barahonae barahonae    Williams 1962          #> 2 Anolis barahonae Anolis barahonae albocellatus Schwartz 1974          #> 3 Anolis barahonae Anolis barahonae ininquinatus Cullom & Schwartz 1980 #> 4 Anolis barahonae Anolis barahonae mulitus      Cullom & Schwartz 1980"},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"when-to-use-each-approach","dir":"","previous_headings":"Usage","what":"When to use each approach","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"Online access: retrieving --date complete information specific taxa Offline access: efficiently verifying large taxonomic datasets, working without internet connection, reducing server load","code":""},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"citing-the-data","dir":"","previous_headings":"","what":"Citing the Data","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"Please cite original Reptile Database use package published work: Uetz, P., Freed, P., & Hošek, J. (eds.) (2021). Reptile Database. Retrieved http://www.reptile-database.org","code":""},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"Contributions, bug reports, feature requests welcome! Please use issue tracker report problems suggest improvements.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"package free open source software, licensed MIT License. See LICENSE file details.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Interface to the Reptile Database for Querying and Retrieving Taxonomic Data","text":"Special thanks editors contributors Reptile Database dedication herpetological taxonomy maintaining open-access scientific resource global community.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/clean_names_rdbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and standardize column names in a data.frame — clean_names_rdbr","title":"Clean and standardize column names in a data.frame — clean_names_rdbr","text":"function standardizes column names data.frame make syntactically valid consistent. converts uppercase lowercase, removes spaces special characters, replaces accents, ensures names unique valid R. alternative janitor::clean_names() function implemented base R.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/clean_names_rdbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and standardize column names in a data.frame — clean_names_rdbr","text":"","code":"clean_names_rdbr(   df,   case = c(\"snake\", \"lower_camel\", \"upper_camel\", \"screaming_snake\"),   replace_special_chars = TRUE,   unique_names = TRUE )"},{"path":"https://paulesantos.github.io/reptiledbr/reference/clean_names_rdbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and standardize column names in a data.frame — clean_names_rdbr","text":"df data.frame tibble whose column names want clean. case case format resulting names. Options: \"snake\" (default): names_with_underscores \"lower_camel\": namesWithCamelCase \"upper_camel\": NamesWithCamelCase \"screaming_snake\": NAMES_WITH_UNDERSCORES replace_special_chars Logical. TRUE (default), replaces accented special characters ASCII equivalents (e.g., \"accent\" becomes \"\"). unique_names Logical. TRUE (default), ensures resulting names unique adding numeric suffixes duplicates.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/clean_names_rdbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and standardize column names in a data.frame — clean_names_rdbr","text":"data.frame data input clean standardized column names according specified parameters.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/clean_names_rdbr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean and standardize column names in a data.frame — clean_names_rdbr","text":"cleaning process includes: Converting everything lowercase (except camel screaming_snake formats) Replacing accents common special characters ASCII equivalents Removing parentheses content Replacing non-alphanumeric characters underscores Removing redundant underscores (leading, trailing, duplicated) Ensuring names start numbers (adding \"x\" beginning) Applying selected case format Ensuring names unique adding numeric suffixes","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/reference/extract_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and optionally format a specific attribute — extract_attribute","text":"","code":"extract_attribute(reptile_data, attribute_name, format_function = NULL)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/extract_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and optionally format a specific attribute — extract_attribute","text":"reptile_data data frame obtained using get_reptile_species_data() function. attribute_name Name attribute extract (e.g., \"Distribution\", \"Synonym\"). format_function Optional formatting function custom processing.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/extract_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and optionally format a specific attribute — extract_attribute","text":"tibble formatted information specified attribute.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/extract_attribute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract and optionally format a specific attribute — extract_attribute","text":"Extracts optionally formats structured information given attribute.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_all_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format all available reptile attributes — format_all_attributes","text":"","code":"format_all_attributes(reptile_data, quiet = FALSE)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_all_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format all available reptile attributes — format_all_attributes","text":"reptile_data data frame obtained using get_reptile_species_data() function. quiet Logical. TRUE, suppresses informational messages. Default FALSE.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_all_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format all available reptile attributes — format_all_attributes","text":"list containing formatted attributes.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_all_attributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format all available reptile attributes — format_all_attributes","text":"Applies formatting functions known attributes reptile dataset.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Format reptile comment data  Extracts and formats general comments associated with reptile species. — format_comments","title":"Format reptile comment data  Extracts and formats general comments associated with reptile species. — format_comments","text":"Format reptile comment data  Extracts formats general comments associated reptile species.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format reptile comment data  Extracts and formats general comments associated with reptile species. — format_comments","text":"","code":"format_comments(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format reptile comment data  Extracts and formats general comments associated with reptile species. — format_comments","text":"reptile_data data frame obtained using get_reptile_species_data() function.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format reptile comment data  Extracts and formats general comments associated with reptile species. — format_comments","text":"tibble containing formatted comments species.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_common_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Format common names for reptiles  — format_common_names","title":"Format common names for reptiles  — format_common_names","text":"Format common names reptiles","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_common_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format common names for reptiles  — format_common_names","text":"","code":"format_common_names(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_common_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format common names for reptiles  — format_common_names","text":"reptile_data tibble returned get_reptile_species_data().","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_common_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format common names for reptiles  — format_common_names","text":"tibble formatted common names species.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_diagnosis.html","id":null,"dir":"Reference","previous_headings":"","what":"Format diagnostic information for reptiles  — format_diagnosis","title":"Format diagnostic information for reptiles  — format_diagnosis","text":"Format diagnostic information reptiles","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_diagnosis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format diagnostic information for reptiles  — format_diagnosis","text":"","code":"format_diagnosis(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_diagnosis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format diagnostic information for reptiles  — format_diagnosis","text":"reptile_data tibble returned get_reptile_species_data().","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_diagnosis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format diagnostic information for reptiles  — format_diagnosis","text":"tibble formatted diagnostic descriptions species.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format distribution data into a long table format — format_distribution","text":"","code":"format_distribution(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format distribution data into a long table format — format_distribution","text":"reptile_data tibble returned get_reptile_species_data().","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format distribution data into a long table format — format_distribution","text":"tibble distribution data long format.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_etymology.html","id":null,"dir":"Reference","previous_headings":"","what":"Format etymological data of reptiles  Extracts and formats the etymological information associated with reptile species. — format_etymology","title":"Format etymological data of reptiles  Extracts and formats the etymological information associated with reptile species. — format_etymology","text":"Format etymological data reptiles  Extracts formats etymological information associated reptile species.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_etymology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format etymological data of reptiles  Extracts and formats the etymological information associated with reptile species. — format_etymology","text":"","code":"format_etymology(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_etymology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format etymological data of reptiles  Extracts and formats the etymological information associated with reptile species. — format_etymology","text":"reptile_data data frame obtained using get_reptile_species_data() function.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_etymology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format etymological data of reptiles  Extracts and formats the etymological information associated with reptile species. — format_etymology","text":"tibble containing formatted etymological details species.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_higher_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Format higher-level taxonomic data for reptiles  — format_higher_taxa","title":"Format higher-level taxonomic data for reptiles  — format_higher_taxa","text":"Format higher-level taxonomic data reptiles","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_higher_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format higher-level taxonomic data for reptiles  — format_higher_taxa","text":"","code":"format_higher_taxa(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_higher_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format higher-level taxonomic data for reptiles  — format_higher_taxa","text":"reptile_data tibble returned get_reptile_species_data().","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_higher_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format higher-level taxonomic data for reptiles  — format_higher_taxa","text":"tibble formatted higher taxonomic classification species.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_references.html","id":null,"dir":"Reference","previous_headings":"","what":"Format bibliographic reference data of reptiles  Extracts and formats bibliographic references associated with reptile species. — format_references","title":"Format bibliographic reference data of reptiles  Extracts and formats bibliographic references associated with reptile species. — format_references","text":"Format bibliographic reference data reptiles  Extracts formats bibliographic references associated reptile species.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format bibliographic reference data of reptiles  Extracts and formats bibliographic references associated with reptile species. — format_references","text":"","code":"format_references(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_references.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format bibliographic reference data of reptiles  Extracts and formats bibliographic references associated with reptile species. — format_references","text":"reptile_data data frame obtained using get_reptile_species_data() function.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format bibliographic reference data of reptiles  Extracts and formats bibliographic references associated with reptile species. — format_references","text":"tibble containing formatted references species.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_reproduction.html","id":null,"dir":"Reference","previous_headings":"","what":"Format reproductive data for reptiles  — format_reproduction","title":"Format reproductive data for reptiles  — format_reproduction","text":"Format reproductive data reptiles","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_reproduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format reproductive data for reptiles  — format_reproduction","text":"","code":"format_reproduction(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_reproduction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format reproductive data for reptiles  — format_reproduction","text":"reptile_data tibble returned get_reptile_species_data().","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_reproduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format reproductive data for reptiles  — format_reproduction","text":"tibble formatted reproductive information species.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_selected_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format selected reptile attributes — format_selected_attributes","text":"","code":"format_selected_attributes(reptile_data, attributes, quiet = FALSE)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_selected_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format selected reptile attributes — format_selected_attributes","text":"reptile_data data frame obtained using get_reptile_species_data() function. attributes character vector specifying attributes extract. quiet Logical. TRUE, suppresses informational messages. Default FALSE.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_selected_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format selected reptile attributes — format_selected_attributes","text":"list containing selected formatted attributes.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_selected_attributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format selected reptile attributes — format_selected_attributes","text":"Extracts formats specified attributes reptile dataset.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_subspecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Format subspecies data for reptiles  — format_subspecies","title":"Format subspecies data for reptiles  — format_subspecies","text":"Format subspecies data reptiles","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_subspecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format subspecies data for reptiles  — format_subspecies","text":"","code":"format_subspecies(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_subspecies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format subspecies data for reptiles  — format_subspecies","text":"reptile_data tibble returned get_reptile_species_data().","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_subspecies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format subspecies data for reptiles  — format_subspecies","text":"tibble formatted subspecies species.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_synonyms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format synonym data for reptiles — format_synonyms","text":"","code":"format_synonyms(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_synonyms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format synonym data for reptiles — format_synonyms","text":"reptile_data tibble returned get_reptile_species_data().","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_synonyms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format synonym data for reptiles — format_synonyms","text":"tibble formatted synonym names species.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Format nomenclatural type data for reptiles  — format_types","title":"Format nomenclatural type data for reptiles  — format_types","text":"Format nomenclatural type data reptiles","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format nomenclatural type data for reptiles  — format_types","text":"","code":"format_types(reptile_data)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format nomenclatural type data for reptiles  — format_types","text":"reptile_data tibble returned get_reptile_species_data().","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/format_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format nomenclatural type data for reptiles  — format_types","text":"tibble formatted type information species.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a specific attribute from reptile species data — get_attribute","text":"","code":"get_attribute(reptile_data, attribute_name)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a specific attribute from reptile species data — get_attribute","text":"reptile_data tibble returned get_reptile_species_data(). attribute_name string indicating name attribute extract (e.g., \"Distribution\", \"Synonym\").","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a specific attribute from reptile species data — get_attribute","text":"tibble columns input_name, genus, species, attribute_value containing extracted values.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_reptiledb_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Access Reptile Database Taxonomic Information  — get_reptiledb_data","title":"Access Reptile Database Taxonomic Information  — get_reptiledb_data","text":"Retrieves taxonomic information living reptile species Reptile Database. function allows users explore scientific names, synonyms, distributions, taxonomic references known species snakes, lizards, turtles, amphisbaenians, tuataras, crocodiles.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_reptiledb_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access Reptile Database Taxonomic Information  — get_reptiledb_data","text":"","code":"get_reptiledb_data(species_names, timeout = 10, quiet = FALSE)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_reptiledb_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Access Reptile Database Taxonomic Information  — get_reptiledb_data","text":"Uetz, P., Freed, P., & Hosek, J. (eds.) (2021). Reptile Database. Available : https://reptile-database.reptarium.cz phylogenetic background see: Zheng, Y., & Wiens, J. J. (2016). Combining phylogenomics fossils higher-level squamate reptile phylogeny. BMC Evolutionary Biology, 16, 1-20.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_reptiledb_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access Reptile Database Taxonomic Information  — get_reptiledb_data","text":"species_names character string scientific name species (e.g., \"Crocodylus acutus\"). timeout Maximum waiting time request (seconds) quiet Logical value TRUE FALSE.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_reptiledb_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access Reptile Database Taxonomic Information  — get_reptiledb_data","text":"list data frame containing available taxonomic information (e.g., accepted name, synonyms, family, distribution, literature references).","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_reptiledb_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access Reptile Database Taxonomic Information  — get_reptiledb_data","text":"Reptile Database currently includes 10,000 species around 2,800 subspecies. focuses taxonomic nomenclatural data, including valid names, synonyms, type localities, distribution, original references. However, ecological behavioral data largely absent. Data compiled peer-reviewed literature, expert contributions, curated editorial team. Updates corrections users welcome help improve resource. classification follows recent phylogenetic studies (e.g., Zheng & Wiens, 2016), although database takes conservative approach rapidly changing taxonomic hypotheses. New genera species proposals may first appear \"synonyms\" field pending wider scientific acceptance. Note: database support species identification traits, users can search geographical distribution higher taxonomic groups.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_reptiledb_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access Reptile Database Taxonomic Information  — get_reptiledb_data","text":"Data curated P. Uetz collaborators. Function implementation Paul E. Santos Andrade.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/get_reptiledb_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access Reptile Database Taxonomic Information  — get_reptiledb_data","text":"","code":"get_reptiledb_data(\"Anolis carolinensis\",                            quiet = TRUE) #> # A tibble: 1 × 7 #>   input_name          genus  species      url      status error_message data     #>   <chr>               <chr>  <chr>        <chr>    <chr>  <chr>         <list>   #> 1 Anolis carolinensis Anolis carolinensis http://… succe… NA            <tibble>"},{"path":"https://paulesantos.github.io/reptiledbr/reference/list_subspecies_reptiledbr.html","id":null,"dir":"Reference","previous_headings":"","what":"List Subspecies from ReptileDB — list_subspecies_reptiledbr","title":"List Subspecies from ReptileDB — list_subspecies_reptiledbr","text":"function processes results ReptileDB database search extract subspecies information. identifies species subspecies returns tibble species name, subspecies name, author information.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/list_subspecies_reptiledbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Subspecies from ReptileDB — list_subspecies_reptiledbr","text":"","code":"list_subspecies_reptiledbr(df)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/list_subspecies_reptiledbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Subspecies from ReptileDB — list_subspecies_reptiledbr","text":"df dataframe tibble result using reptiledbr_exact, reptiledbr_partial search_reptiledbr functions.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/list_subspecies_reptiledbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Subspecies from ReptileDB — list_subspecies_reptiledbr","text":"tibble three columns: species name species subspecies_name full name subspecies author author year subspecies description","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/list_subspecies_reptiledbr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Subspecies from ReptileDB — list_subspecies_reptiledbr","text":"","code":"if (FALSE) { # \\dontrun{ subspecies_names <- c(\"Lachesis muta\", \"Anilius scytale\", \"Anolis bahorucoensis\") search_reptiledbr(subspecies_names, use_fuzzy = FALSE) |>   list_subspecies_reptiledbr() } # }"},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledb_012025.html","id":null,"dir":"Reference","previous_headings":"","what":"Reptile Checklist with Subspecies Information — reptiledb_012025","title":"Reptile Checklist with Subspecies Information — reptiledb_012025","text":"comprehensive dataset extracted Reptile Database containing taxonomic nomenclatural information reptile species subspecies. tibble includes detailed columns related authorship, type species, taxonomic changes.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledb_012025.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reptile Checklist with Subspecies Information — reptiledb_012025","text":"","code":"reptiledb_012025"},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledb_012025.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Reptile Checklist with Subspecies Information — reptiledb_012025","text":"tibble 14,474 rows 18 columns: order Taxonomic order reptile (e.g., \"Sauria\"). family Taxonomic family (e.g., \"Scincidae\"). genus Genus name. ephitetho Species epithet (second part species name). species Full species name (genus + epithet). author Primary author(s) species name. species_author Author(s) species year description. species_name_year Year species described. subspecies_name Epithet subspecies (). subspecie_author_info Full author citation subspecies. subspecies_name_author Author(s) subspecies name. subspecies_year Year subspecies described. type_species Name type species, available. subspecies Full subspecies name (genus + species + subspecies). change Text description taxonomic nomenclatural change. rdb_sp_id Unique identifier assigned Reptile Database. nomenclature_change Logical flag indicating nomenclatural change occurred (TRUE / FALSE). nomenclature_change_species Logical flag indicating nomenclatural change affects species level (TRUE / FALSE).","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledb_012025.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Reptile Checklist with Subspecies Information — reptiledb_012025","text":"http://www.reptile-database.org/","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledb_012025.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reptile Checklist with Subspecies Information — reptiledb_012025","text":"dataset part reptiledbr package provides structured access reptile taxonomy data, enabling users filter, analyze, visualize species subspecies information across multiple reptile families genera.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"reptiledbr: Interface to the Reptile Database for Querying and Retrieving Taxonomic Data — reptiledbr-package","title":"reptiledbr: Interface to the Reptile Database for Querying and Retrieving Taxonomic Data — reptiledbr-package","text":"Provides tools search, access, format taxonomic information Reptile Database (http://reptile-database.org) directly within R. Users can retrieve species-level data, distribution, etymology, synonyms, common names, relevant information reptiles. Designed taxonomists, ecologists, biodiversity researchers.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"reptiledbr: Interface to the Reptile Database for Querying and Retrieving Taxonomic Data — reptiledbr-package","text":"Maintainer: Paul Efren Santos Andrade paulefrens@gmail.com (ORCID)","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr_exact.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Reptile Species by Exact Match and Subspecies Presence — reptiledbr_exact","title":"Search Reptile Species by Exact Match and Subspecies Presence — reptiledbr_exact","text":"function searches exact matches scientific species names indicates whether matched species associated subspecies dataset.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr_exact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Reptile Species by Exact Match and Subspecies Presence — reptiledbr_exact","text":"","code":"reptiledbr_exact(species_names)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr_exact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Reptile Species by Exact Match and Subspecies Presence — reptiledbr_exact","text":"species_names Character vector full species names search .","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr_exact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Reptile Species by Exact Match and Subspecies Presence — reptiledbr_exact","text":"tibble taxonomic information message indicating subspecies presence. response variable may return different messages depending outcome query. Possible values include: \"Species found\" – specified species matched database. \"Species subspecies\" – specified species exists one subspecies registered. \"subspecies found\" – species found, subspecies associated database.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr_exact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Reptile Species by Exact Match and Subspecies Presence — reptiledbr_exact","text":"","code":"reptiledbr_exact(c(\"Ablepharus alaicus\", \"Anolis limon\")) #> # A tibble: 2 × 10 #>      id input_name found species_match order family genus epithet author message #>   <int> <chr>      <lgl> <chr>         <chr> <chr>  <chr> <chr>   <chr>  <chr>   #> 1     1 Ablepharu… TRUE  Ablepharus a… Saur… Scinc… Able… alaicus Elpat… Specie… #> 2     2 Anolis li… TRUE  Anolis limon  Saur… Anoli… Anol… limon   Velas… No sub…"},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr_partial.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Search for Species Names Using Approximate Matching — reptiledbr_partial","title":"Fuzzy Search for Species Names Using Approximate Matching — reptiledbr_partial","text":"function performs approximate (fuzzy) matching species names given list input terms species names reptile database, indicates whether matched species subspecies.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr_partial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Search for Species Names Using Approximate Matching — reptiledbr_partial","text":"","code":"reptiledbr_partial(species_names, max_dist = 2)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr_partial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Search for Species Names Using Approximate Matching — reptiledbr_partial","text":"species_names Character vector. One scientific names fragments match approximately. max_dist Maximum string distance allowed match (default: 2).","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr_partial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Search for Species Names Using Approximate Matching — reptiledbr_partial","text":"tibble matched species, taxonomic info, fuzzy match flag, subspecies presence. response variable may return different messages depending outcome query. Possible values include: \"Species found\" – specified species matched database. \"Species subspecies\" – specified species exists one subspecies registered. \"subspecies found\" – species found, subspecies associated database.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/reptiledbr_partial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Search for Species Names Using Approximate Matching — reptiledbr_partial","text":"","code":"reptiledbr_partial(c(\"Ablepharus alaicuss\", \"Anolis limom\")) #> # A tibble: 2 × 11 #>      id input_name         found species_match order family genus epithet author #>   <int> <chr>              <lgl> <chr>         <chr> <chr>  <chr> <chr>   <chr>  #> 1     1 Ablepharus alaicu… TRUE  Ablepharus a… Saur… Scinc… Able… alaicus Elpat… #> 2     2 Anolis limom       TRUE  Anolis limon  Saur… Anoli… Anol… limon   Velas… #> # ℹ 2 more variables: fuzzy_match <lgl>, message <chr>"},{"path":"https://paulesantos.github.io/reptiledbr/reference/search_reptiledbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Comprehensive Search for Reptile Species with Exact and Fuzzy Matching — search_reptiledbr","title":"Comprehensive Search for Reptile Species with Exact and Fuzzy Matching — search_reptiledbr","text":"function combines exact fuzzy matching approaches search reptile species names database. first attempts exact matches uses fuzzy matching species names found exactly.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/search_reptiledbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comprehensive Search for Reptile Species with Exact and Fuzzy Matching — search_reptiledbr","text":"","code":"search_reptiledbr(species_names, max_dist = 2, use_fuzzy = TRUE)"},{"path":"https://paulesantos.github.io/reptiledbr/reference/search_reptiledbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comprehensive Search for Reptile Species with Exact and Fuzzy Matching — search_reptiledbr","text":"species_names Character vector scientific species names search . max_dist Maximum string distance allowed fuzzy matching (default: 2). use_fuzzy Logical. TRUE, performs fuzzy search species found exactly. FALSE, exact matching (default: TRUE).","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/search_reptiledbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comprehensive Search for Reptile Species with Exact and Fuzzy Matching — search_reptiledbr","text":"combined tibble results exact fuzzy matching approaches, flag indicating match type. Results maintain original order species_names. response variable may return different messages depending outcome query. Possible values include: \"Species found\" – specified species matched database. \"Species subspecies\" – specified species exists one subspecies registered. \"subspecies found\" – species found, subspecies associated database.","code":""},{"path":"https://paulesantos.github.io/reptiledbr/reference/search_reptiledbr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comprehensive Search for Reptile Species with Exact and Fuzzy Matching — search_reptiledbr","text":"","code":"search_reptiledbr(c(\"Ablepharus alaicus\", \"Anolis limom\")) #> # A tibble: 2 × 12 #>      id input_name found species_match order family genus epithet author message #>   <int> <chr>      <lgl> <chr>         <chr> <chr>  <chr> <chr>   <chr>  <chr>   #> 1     1 Ablepharu… TRUE  Ablepharus a… Saur… Scinc… Able… alaicus Elpat… Specie… #> 2     2 Anolis li… TRUE  Anolis limon  Saur… Anoli… Anol… limon   Velas… No sub… #> # ℹ 2 more variables: match_type <chr>, fuzzy_match <lgl>"}]
